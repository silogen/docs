metadata:
  labels: {}

image: "lmsysorg/sglang:v0.4.3.post2-rocm630"
imagePullPolicy: Always

model: "deepseek-ai/DeepSeek-R1-Distill-Qwen-1.5B"
gpus: 1
memory_per_gpu: 64 # Gi
cpu_per_gpu: 4

# sglang server args (ref: https://docs.sglang.ai/backend/server_arguments.html)
sglang_server_args:
  {}
  # model-path={{ .Values.model }}  # taken care of by the template
  # tensor-parallel-size={{ .Values.gpus }}  # taken care of by the template
  # disable-cuda-graph: "true"
  # mem-fraction-static: 0.9

# env vars (sglang ref: https://docs.sglang.ai/index.html)
env_vars:
  BUCKET_STORAGE_HOST: http://minio.minio-tenant-default.svc.cluster.local:80
  BUCKET_STORAGE_ACCESS_KEY:
    name: minio-credentials
    key: minio-access-key
  BUCKET_STORAGE_SECRET_KEY:
    name: minio-credentials
    key: minio-secret-key
  HF_HOME: /workload/.cache/huggingface

storage:
  ephemeral:
    quantity: 128Gi
    storageClassName: mlstorage
    accessModes:
      - ReadWriteOnce
  dshm:
    sizeLimit: 32Gi

deployment:
  ports:
    http: 8080

# startupProbe - checks if the container has successfully started. It disables liveness and readiness probes until it succeeds, useful for slow-starting applications.
# livenessProbe - checks if the container is still alive. If it fails, Kubernetes restarts the container to recover from failure.
# readinessProbe - checks if the container is ready to serve traffic. If it fails, the container is removed from the service's endpoints but remains running.
# ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
startupProbe:
  httpGet:
    path: /v1/models
    port: http
  periodSeconds: 10
  failureThreshold: 360 # 360 x 10s => allow for 60 minutes startup time
livenessProbe:
  httpGet:
    path: /health
    port: http
readinessProbe:
  httpGet:
    path: /v1/models
    port: http

# kaiwo settings (if enabled, use kaiwo CRDs to have kaiwo operator manage the workload)
kaiwo:
  enabled: false
