{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "type": "object",
    "properties": {
      "finetuningImage": {
        "type": "string",
        "description": "Finetuning engine image"
      },
      "labels": {
        "type": "object",
        "description": "Any labels to add for the manifest, recommended: kueue",
        "additionalProperties": true
      },
      "imagePullSecrets": {
        "type": "array",
        "description": "Any imagePullSecrets to use",
        "items": {
          "type": "string"
        }
      },
      "bucketStorageHost": {
        "type": "string",
        "description": "The cloud storage host URL"
      },
      "bucketCredentialsSecret": {
        "type": "object",
        "description": "Bucket storage credential secret values, required to have the secret already setup in the cluster (e.g. via external secrets)",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the secret in the cluster that contains the bucket storage credentials",
            "default": "minio-credentials"
          },
          "accessKeyKey": {
            "type": "string",
            "description": "The key in the secret that contains the access key",
            "default": "minio-access-key"
          },
          "secretKeyKey": {
            "type": "string",
            "description": "The key in the secret that contains the access key",
            "default": "minio-secret-key"
          }
        }
      },
      "downloadsReservedSize": {
        "type": "string",
        "description": "How much space to reserve for model and data downloads",
        "default": "64Gi"
      },
      "checkpointsReservedSize": {
        "type": "string",
        "description": "How much space to reserve for model and data downloads",
        "default": "512Gi"
      },
      "storageClass": {
        "type": ["string", "null"],
        "description": "Optionally set this to use a specific storageClass for the storage"
      },
      "finetuningGpus": {
        "type": "integer",
        "description": "How many GPUs to use",
        "default": 1
      },
      "distributedType": {
        "type": "string",
        "default": "auto-deepspeed-stage1",
        "enum": ["auto-deepspeed-stage1", "auto-deepspeed-stage3", "auto-ddp", "auto-single-process", "custom-accelerate-config"],
        "description": "The type of distributed training to use. If using custom-accelerate-config, provide the config as an object in customAccelerateConfig"
      },
      "customAccelerateConfig": {
        "type": ["object", "null"]
      },
      "mergeAdapter": {
        "type": "boolean",
        "description": "Whether to merge the adapter at the end of training or not.",
        "default": false
      },
      "checkpointsRemote": {
        "type": "string",
        "description": "Path in bucket storage where to store the checkpoints."
      },
      "basemodel": {
        "type": "string",
        "description": "Path in bucket storage where the basemodel is stored."
      },

      "finetuning_config": {
        "discriminator": {
          "mapping": {
            "dpo": "#/$defs/DPOExperimentConfig",
            "sft": "#/$defs/SFTExperimentConfig"
          },
          "propertyName": "method"
        },
        "oneOf": [
          {
            "$ref": "#/$defs/SFTExperimentConfig"
          },
          {
            "$ref": "#/$defs/DPOExperimentConfig"
          }
        ],
        "title": "Finetuning Config"
      },
      "kaiwo": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean",
            "description": "If true, use Kaiwo CRDs to have Kaiwo operator manage the workload"
          }
        }
      }
    },
    "required": ["bucketCredentialsSecret", "checkpointsRemote", "basemodel", "finetuning_config", "kaiwo"],
    "$defs": {
      "AutoSplitDataInput": {
        "additionalProperties": false,
        "description": "Automatic validation split from the training data",
        "properties": {
          "type": {
            "const": "AUTO_SPLIT",
            "title": "Type",
            "type": "string"
          },
          "data_type": {
            "default": "ChatConversation",
            "title": "Data Type",
            "type": "string"
          },
          "ratio": {
            "default": 0.2,
            "description": "Ratio of the training data to use for validation",
            "title": "Ratio",
            "type": "number"
          },
          "seed": {
            "default": 1289525893,
            "description": "Seed for the random number generator for splitting",
            "title": "Seed",
            "type": "integer"
          }
        },
        "required": [
          "type"
        ],
        "title": "AutoSplitDataInput",
        "type": "object"
      },
      "BatchsizeConfig": {
        "additionalProperties": false,
        "description": "Config for determining the total batch size\n\nTotal batch size is the effective batch size for the complete training run. It is equal to\nnumber of processes * per-device batch size * accumulation.\n\nThe maximum batch size per device is the maximum batch size that can be accommodated on a single device.\nThis mostly limited by the memory capacity of the device.",
        "properties": {
          "total_train_batch_size": {
            "description": "The total batch size for the training run",
            "title": "Total Train Batch Size",
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ]
          },
          "max_per_device_train_batch_size": {
            "description": "The maximum training batch size per device",
            "title": "Max Per Device Train Batch Size",
            "type": "integer"
          },
          "per_device_eval_batch_size": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "The maximum eval batch size per device, if not given, will use same as training batch size",
            "title": "Per Device Eval Batch Size"
          }
        },
        "required": [
          "total_train_batch_size",
          "max_per_device_train_batch_size"
        ],
        "title": "BatchsizeConfig",
        "type": "object"
      },
      "BnBQuantizationConfig": {
        "additionalProperties": false,
        "description": "Bits and Bytes configuration\n\nThe options are from the BitsAndBytes config,\nsee: https://huggingface.co/docs/transformers/en/main_classes/quantization#transformers.BitsAndBytesConfig",
        "properties": {
          "quantization_type": {
            "const": "bits-and-bytes",
            "default": "bits-and-bytes",
            "title": "Quantization Type",
            "type": "string"
          },
          "load_in_8bit": {
            "default": false,
            "title": "Load In 8Bit",
            "type": "boolean"
          },
          "load_in_4bit": {
            "default": false,
            "title": "Load In 4Bit",
            "type": "boolean"
          },
          "llm_int8_threshold": {
            "default": 6.0,
            "title": "Llm Int8 Threshold",
            "type": "number"
          },
          "llm_int8_skip_modules": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Llm Int8 Skip Modules"
          },
          "llm_int8_enable_fp32_cpu_offload": {
            "default": false,
            "title": "Llm Int8 Enable Fp32 Cpu Offload",
            "type": "boolean"
          },
          "llm_int8_has_fp16_weight": {
            "default": false,
            "title": "Llm Int8 Has Fp16 Weight",
            "type": "boolean"
          },
          "bnb_4bit_compute_dtype": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Bnb 4Bit Compute Dtype"
          },
          "bnb_4bit_quant_type": {
            "anyOf": [
              {
                "const": "fp4",
                "type": "string"
              },
              {
                "const": "nf4",
                "type": "string"
              }
            ],
            "default": "fp4",
            "title": "Bnb 4Bit Quant Type"
          },
          "bnb_4bit_use_double_quant": {
            "default": false,
            "title": "Bnb 4Bit Use Double Quant",
            "type": "boolean"
          },
          "bnb_4bit_quant_storage": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Bnb 4Bit Quant Storage"
          }
        },
        "title": "BnBQuantizationConfig",
        "type": "object"
      },
      "ChatTemplateName": {
        "enum": [
          "mistral-with-system",
          "chat-ml",
          "poro",
          "keep-original",
          "simplified-llama31"
        ],
        "title": "ChatTemplateName",
        "type": "string"
      },
      "ChatTrainValidConfig": {
        "additionalProperties": false,
        "description": "Training time data configuration\n\nAlways defines some DataInput for training data and can include validation DataInput, though a trivial NoneDataInput\nis also allowed for the validation side.\n\nAdditionally includes chat template and padding configurations, as those are part of the data input pipeline.",
        "properties": {
          "training_data": {
            "anyOf": [
              {
                "$ref": "#/$defs/ConcatenationDataInput"
              },
              {
                "$ref": "#/$defs/WeightedMixDataInput"
              }
            ],
            "title": "Training Data"
          },
          "validation_data": {
            "anyOf": [
              {
                "$ref": "#/$defs/ConcatenationDataInput"
              },
              {
                "$ref": "#/$defs/AutoSplitDataInput"
              },
              {
                "$ref": "#/$defs/NoneDataInput"
              }
            ],
            "title": "Validation Data"
          },
          "chat_template_name": {
            "$ref": "#/$defs/ChatTemplateName",
            "default": "mistral-with-system"
          },
          "padding_side": {
            "default": "right",
            "description": "Padding side, right is usually right.",
            "title": "Padding Side",
            "type": "string"
          },
          "missing_pad_token_strategy": {
            "$ref": "#/$defs/MissingPadTokenStrategy",
            "default": "bos-repurpose",
            "description": "See the MissingPadTokenStrategys for descriptions of the options"
          }
        },
        "required": [
          "training_data",
          "validation_data"
        ],
        "title": "ChatTrainValidConfig",
        "type": "object"
      },
      "ConcatenationDataInput": {
        "additionalProperties": false,
        "description": "A simple list of datasets\n\nThese are simply concatenated, the same as sampling all with equal weight.\n\nThe datasets themselves need to be in the finetuning supported JSONL formats.\nFor SFT this means lines:\n{\"messages\": {\"content\": \"string\", \"role\": \"string\"}}\nFor DPO this means lines of:\n{\"prompt_messages\": {\"content\": \"string\", \"role\": \"string\"}, \"chosen_messages\": {\"content\": \"string\", \"role\": \"string\"}, \"rejected_messages\": {\"content\": \"string\", \"role\": \"string\"}}",
        "properties": {
          "type": {
            "const": "CONCATENATION",
            "title": "Type",
            "type": "string"
          },
          "data_type": {
            "default": "ChatConversation",
            "title": "Data Type",
            "type": "string"
          },
          "datasets": {
            "items": {
              "$ref": "#/$defs/DatasetDefinition"
            },
            "minItems": 1,
            "title": "Datasets",
            "type": "array"
          }
        },
        "required": [
          "type",
          "datasets"
        ],
        "title": "ConcatenationDataInput",
        "type": "object"
      },
      "DPOExperimentConfig": {
        "additionalProperties": false,
        "description": "A full DPO experiment's config\n\nSee the various sub-configs for their options.",
        "properties": {
          "method": {
            "const": "dpo",
            "default": "dpo",
            "title": "Method",
            "type": "string"
          },
          "data_conf": {
            "$ref": "#/$defs/ChatTrainValidConfig",
            "description": "The data input config"
          },
          "training_args": {
            "$ref": "#/$defs/SilogenDPOConfig",
            "description": "TRL DPOTrainerArguments with some restrictions"
          },
          "overrides": {
            "$ref": "#/$defs/Overrides",
            "default": {
              "lr_multiplier": 1.0,
              "lr_batch_size_scaling": "none"
            },
            "description": "Override options to simplify the config interface"
          },
          "batchsize_conf": {
            "$ref": "#/$defs/BatchsizeConfig",
            "description": "Batch size configuration"
          },
          "peft_conf": {
            "anyOf": [
              {
                "$ref": "#/$defs/NoPeftConfig"
              },
              {
                "$ref": "#/$defs/PretrainedPeftConfig"
              },
              {
                "$ref": "#/$defs/GenericPeftConfig"
              }
            ],
            "description": "Adapter configuration",
            "title": "Peft Conf"
          },
          "run_conf": {
            "$ref": "#/$defs/RunConfig",
            "description": "Model related configuration"
          },
          "tracking": {
            "anyOf": [
              {
                "$ref": "#/$defs/FinetuningTrackingConfig"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "MLFlow tracking configuration"
          },
          "quant_conf": {
            "anyOf": [
              {
                "$ref": "#/$defs/NoQuantizationConfig"
              },
              {
                "$ref": "#/$defs/BnBQuantizationConfig"
              }
            ],
            "default": {
              "quantization_type": "no-quantization"
            },
            "description": "Quantization configuration",
            "title": "Quant Conf"
          }
        },
        "required": [
          "data_conf",
          "training_args",
          "batchsize_conf",
          "peft_conf",
          "run_conf"
        ],
        "title": "DPOExperimentConfig",
        "type": "object"
      },
      "DatasetDefinition": {
        "additionalProperties": false,
        "description": "Define how to load a dataset",
        "properties": {
          "path": {
            "description": "Local path to a JSONL file in the finetuning data format",
            "title": "Path",
            "type": "string"
          }
        },
        "required": [
          "path"
        ],
        "title": "DatasetDefinition",
        "type": "object"
      },
      "DebugOption": {
        "enum": [
          "underflow_overflow",
          "tpu_metrics_debug"
        ],
        "title": "DebugOption",
        "type": "string"
      },
      "FDivergenceType": {
        "enum": [
          "reverse_kl",
          "js_divergence",
          "alpha_divergence"
        ],
        "title": "FDivergenceType",
        "type": "string"
      },
      "FSDPOption": {
        "enum": [
          "full_shard",
          "shard_grad_op",
          "no_shard",
          "hybrid_shard",
          "hybrid_shard_zero2",
          "offload",
          "auto_wrap"
        ],
        "title": "FSDPOption",
        "type": "string"
      },
      "FinetuningTrackingConfig": {
        "additionalProperties": false,
        "description": "Settings that define how run details are logged",
        "properties": {
          "mlflow_server_uri": {
            "title": "Mlflow Server Uri",
            "type": "string"
          },
          "experiment_name": {
            "title": "Experiment Name",
            "type": "string"
          },
          "run_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Run Id"
          },
          "run_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Run Name"
          },
          "hf_mlflow_log_artifacts": {
            "default": "False",
            "title": "Hf Mlflow Log Artifacts",
            "type": "string"
          }
        },
        "required": [
          "mlflow_server_uri",
          "experiment_name"
        ],
        "title": "FinetuningTrackingConfig",
        "type": "object"
      },
      "GenericPeftConfig": {
        "additionalProperties": false,
        "description": "Config for any new initialized PEFT Adapter\n\nSee https://huggingface.co/docs/peft/tutorial/peft_model_config for the possible kwargs\nand https://github.com/huggingface/peft/blob/v0.7.1/src/peft/utils/peft_types.py for the types.\n\nExample\n=======\n    >>> loaded_data = {'peft_type':'LORA', 'task_type': 'CAUSAL_LM',\n    ...         'peft_kwargs': {'r': 32, 'target_modules': ['v_proj']}}\n    >>> generic_conf = GenericPeftConfig(**loaded_data)\n    >>> # Then later in the code something like:\n    >>> model = transformers.AutoModel.from_pretrained('hf-internal-testing/tiny-random-MistralModel')\n    >>> peft.get_peft_model(model, generic_conf.get_peft_config())\n    PeftModelForCausalLM(\n      (base_model): LoraModel(\n        ...\n      )\n    )",
        "properties": {
          "peft_type": {
            "$ref": "#/$defs/PeftType"
          },
          "task_type": {
            "$ref": "#/$defs/TaskType",
            "default": "CAUSAL_LM"
          },
          "peft_kwargs": {
            "additionalProperties": true,
            "title": "Peft Kwargs",
            "type": "object"
          }
        },
        "required": [
          "peft_type"
        ],
        "title": "GenericPeftConfig",
        "type": "object"
      },
      "HubStrategy": {
        "enum": [
          "end",
          "every_save",
          "checkpoint",
          "all_checkpoints"
        ],
        "title": "HubStrategy",
        "type": "string"
      },
      "IntervalStrategy": {
        "enum": [
          "no",
          "steps",
          "epoch"
        ],
        "title": "IntervalStrategy",
        "type": "string"
      },
      "MissingPadTokenStrategy": {
        "description": "Specifies the available missing pad token strategies.\n\nWe've shown in a small set of experiments that repurposing EOS can start to hurt performance\nwhile the other options seem to work equally well.\n\nRepurposing EOS is the default in many online sources, but it is actually a bad idea if we want to predict\nEOS, as all the pad_token_ids get ignored in loss computation, and thus the model does not learn to predict\nthe end of the text. However, for models that have additional tokens for end of message, end of turn, etc.\nthis is not so dangerous.\n\nRepurposing BOS is similar to repurposing EOS, but since we do not need to predict BOS, this may be more sensible.\n\nRepurposing UNK can work with tokenizers that never produce UNKs in normal data (e.g. Mistral tokenizers should have\na byte fall-back so that everything can be tokenized).\n\nUNK_CONVERT_TO_EOS uses a hack where the unk_token_id is initially used for padding, but in the collation phase the\ninput-side UNKs (padding) gets set to EOS, so that the input-side padding looks like EOS. On the output-side, the\nUNKs (padding) still gets ignored. NOTE: This will leave the tokenizer's pad_token_id set to the unk_token_id; so\nany subsequent use of the model where padding is involved should somehow explicitly set the pad_token_id again.",
        "enum": [
          "eos-repurpose",
          "bos-repurpose",
          "unk-repurpose",
          "unk-convert-to-eos"
        ],
        "title": "MissingPadTokenStrategy",
        "type": "string"
      },
      "ModelArguments": {
        "additionalProperties": false,
        "description": "These are passed to AutoModelForCausalLM.from_pretrained\n\nSee parameter docstrings and help at:\nhttps://huggingface.co/docs/transformers/main/en/main_classes/model#transformers.PreTrainedModel.from_pretrained\nSee below in \"Parameters for big model inference\" too, it affects training too. Also note that this link takes you\nto the transformers main branch version - be sure to compare with the installed version of transformers (that keeps\nchanging over time, and it is difficult to keep this doctstring up to date, so we wanted to link to the latest here).\n\nSome important parameters to consider are:\n\ndevice_map :\n    A map that specifies where each submodule should go. It doesn\u2019t need to be refined to each parameter/buffer\n    name, once a given module name is inside, every submodule of it will be sent to the same device. If we only pass\n    the device (e.g., \"cpu\", \"cuda:1\", \"mps\", or a GPU ordinal rank like 1) on which the model will be allocated,\n    the device map will map the entire model to this device. Passing device_map = 0 means put the whole model on GPU\n    0.\nattn_implementation :\n    The attention implementation to use in the model (if relevant). Can be any of \"eager\" (manual implementation of\n    the attention), \"sdpa\" (using F.scaled_dot_product_attention), or \"flash_attention_2\" (using\n    Dao-AILab/flash-attention). By default, if available, SDPA will be used for torch>=2.1.1. The default is\n    otherwise the manual \"eager\" implementation.\n\nNOTE:\n    This does not include quantization_config. Quantization config is specified separately.",
        "properties": {
          "torch_dtype": {
            "default": "auto",
            "title": "Torch Dtype",
            "type": "string"
          },
          "device_map": {
            "anyOf": [
              {
                "additionalProperties": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "string"
                    }
                  ]
                },
                "type": "object"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Device Map"
          },
          "max_memory": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Max Memory"
          },
          "low_cpu_mem_usage": {
            "default": false,
            "title": "Low Cpu Mem Usage",
            "type": "boolean"
          },
          "attn_implementation": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Attn Implementation"
          },
          "offload_folder": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Offload Folder"
          },
          "offload_state_dict": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Offload State Dict"
          },
          "offload_buffers": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Offload Buffers"
          },
          "use_cache": {
            "default": true,
            "title": "Use Cache",
            "type": "boolean"
          },
          "cache_dir": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Cache Dir"
          },
          "force_download": {
            "default": false,
            "title": "Force Download",
            "type": "boolean"
          },
          "local_files_only": {
            "default": false,
            "title": "Local Files Only",
            "type": "boolean"
          },
          "proxies": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Proxies"
          },
          "resume_download": {
            "default": false,
            "title": "Resume Download",
            "type": "boolean"
          },
          "revision": {
            "default": "main",
            "title": "Revision",
            "type": "string"
          },
          "code_revision": {
            "default": "main",
            "title": "Code Revision",
            "type": "string"
          },
          "subfolder": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Subfolder"
          },
          "token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Token"
          },
          "use_safetensors": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Use Safetensors"
          },
          "variant": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Variant"
          },
          "trust_remote_code": {
            "default": false,
            "title": "Trust Remote Code",
            "type": "boolean"
          }
        },
        "title": "ModelArguments",
        "type": "object"
      },
      "NoPeftConfig": {
        "additionalProperties": false,
        "description": "A trivial config specifying that no peft is used",
        "properties": {
          "peft_type": {
            "const": "NO_PEFT",
            "title": "Peft Type",
            "type": "string"
          }
        },
        "required": [
          "peft_type"
        ],
        "title": "NoPeftConfig",
        "type": "object"
      },
      "NoQuantizationConfig": {
        "additionalProperties": false,
        "description": "A marker not to use quantization",
        "properties": {
          "quantization_type": {
            "const": "no-quantization",
            "default": "no-quantization",
            "title": "Quantization Type",
            "type": "string"
          }
        },
        "title": "NoQuantizationConfig",
        "type": "object"
      },
      "NoneDataInput": {
        "additionalProperties": false,
        "description": "A special type for not using data e.g. in validation",
        "properties": {
          "type": {
            "const": "NONE",
            "title": "Type",
            "type": "string"
          },
          "data_type": {
            "default": "ChatConversation",
            "title": "Data Type",
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "title": "NoneDataInput",
        "type": "object"
      },
      "OptimizerNames": {
        "description": "Stores the acceptable string identifiers for optimizers.",
        "enum": [
          "adamw_hf",
          "adamw_torch",
          "adamw_torch_fused",
          "adamw_torch_xla",
          "adamw_torch_npu_fused",
          "adamw_apex_fused",
          "adafactor",
          "adamw_anyprecision",
          "adamw_torch_4bit",
          "adamw_torch_8bit",
          "ademamix",
          "sgd",
          "adagrad",
          "adamw_bnb_8bit",
          "adamw_8bit",
          "ademamix_8bit",
          "lion_8bit",
          "lion_32bit",
          "paged_adamw_32bit",
          "paged_adamw_8bit",
          "paged_ademamix_32bit",
          "paged_ademamix_8bit",
          "paged_lion_32bit",
          "paged_lion_8bit",
          "rmsprop",
          "rmsprop_bnb",
          "rmsprop_bnb_8bit",
          "rmsprop_bnb_32bit",
          "galore_adamw",
          "galore_adamw_8bit",
          "galore_adafactor",
          "galore_adamw_layerwise",
          "galore_adamw_8bit_layerwise",
          "galore_adafactor_layerwise",
          "lomo",
          "adalomo",
          "grokadamw",
          "schedule_free_radam",
          "schedule_free_adamw",
          "schedule_free_sgd",
          "apollo_adamw",
          "apollo_adamw_layerwise"
        ],
        "title": "OptimizerNames",
        "type": "string"
      },
      "Overrides": {
        "additionalProperties": false,
        "description": "Override options\n\nThese implement dynamic scaling for the learning rate.",
        "properties": {
          "lr_multiplier": {
            "default": 1.0,
            "description": "Multiplier applied to the learning rate in the training_args",
            "title": "Lr Multiplier",
            "type": "number"
          },
          "lr_batch_size_scaling": {
            "default": "none",
            "description": "Scales the learning rate in the training_args by a factor derived from the total training batch size.\n            'none': No scaling.\n            'sqrt': Multiplies learning rate by square root of batch size (a classic scaling rule).\n            'linear': Multiplies learning rate by the batch size (a more modern scaling rule).\n",
            "enum": [
              "none",
              "sqrt",
              "linear"
            ],
            "title": "Lr Batch Size Scaling",
            "type": "string"
          }
        },
        "title": "Overrides",
        "type": "object"
      },
      "PeftType": {
        "description": "Enum class for the different types of adapters in PEFT.\n\nSupported PEFT types:\n- PROMPT_TUNING\n- MULTITASK_PROMPT_TUNING\n- P_TUNING\n- PREFIX_TUNING\n- LORA\n- ADALORA\n- BOFT\n- ADAPTION_PROMPT\n- IA3\n- LOHA\n- LOKR\n- OFT\n- XLORA\n- POLY\n- LN_TUNING\n- VERA\n- FOURIERFT\n- HRA",
        "enum": [
          "PROMPT_TUNING",
          "MULTITASK_PROMPT_TUNING",
          "P_TUNING",
          "PREFIX_TUNING",
          "LORA",
          "ADALORA",
          "BOFT",
          "ADAPTION_PROMPT",
          "IA3",
          "LOHA",
          "LOKR",
          "OFT",
          "POLY",
          "LN_TUNING",
          "VERA",
          "FOURIERFT",
          "XLORA",
          "HRA",
          "VBLORA"
        ],
        "title": "PeftType",
        "type": "string"
      },
      "PretrainedPeftConfig": {
        "additionalProperties": false,
        "description": "PEFT adapter uses the config and initialisation from a pretrained adapter",
        "properties": {
          "peft_type": {
            "const": "PRETRAINED_PEFT",
            "title": "Peft Type",
            "type": "string"
          },
          "name_or_path": {
            "title": "Name Or Path",
            "type": "string"
          }
        },
        "required": [
          "peft_type",
          "name_or_path"
        ],
        "title": "PretrainedPeftConfig",
        "type": "object"
      },
      "RunConfig": {
        "additionalProperties": false,
        "description": "Experiment running configuration",
        "properties": {
          "model": {
            "default": "/local_resources/basemodel",
            "description": "Local path to model to be fine-tuned. Normally this should be /local_resources/basemodel",
            "title": "Model",
            "type": "string"
          },
          "model_args": {
            "$ref": "#/$defs/ModelArguments",
            "default": {
              "torch_dtype": "auto",
              "device_map": "auto",
              "max_memory": null,
              "low_cpu_mem_usage": false,
              "attn_implementation": null,
              "offload_folder": null,
              "offload_state_dict": null,
              "offload_buffers": null,
              "use_cache": true,
              "cache_dir": null,
              "force_download": false,
              "local_files_only": false,
              "proxies": null,
              "resume_download": false,
              "revision": "main",
              "code_revision": "main",
              "subfolder": null,
              "token": null,
              "use_safetensors": null,
              "variant": null,
              "trust_remote_code": false
            }
          },
          "tokenizer": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Model HuggingFace ID, or path, or None to use the one associated with the model",
            "title": "Tokenizer"
          },
          "use_fast_tokenizer": {
            "default": true,
            "description": "Use the Fast version of the tokenizer. The 'slow' version may be compatible with more features.",
            "title": "Use Fast Tokenizer",
            "type": "boolean"
          },
          "resume_from_checkpoint": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "string"
              }
            ],
            "default": false,
            "description": "Normally should be set to 'auto' to continue if a checkpoint exists.\nCan set to True to always try to continue, False to never try, or a path to load from a specific path.",
            "title": "Resume From Checkpoint"
          },
          "final_checkpoint_name": {
            "default": "checkpoint-final",
            "description": "Name of final checkpoint. Should be left as default",
            "title": "Final Checkpoint Name",
            "type": "string"
          },
          "determinism": {
            "default": "no",
            "description": "Set the level of determinism in implementations. Deterministic implementations are not always available,\nand when they are, they are usually slower than their non-deterministic counterparts. Recommended for\ndebugging only.\n'no': No determinism.\n'half': Prefer deterministic implementations.\n'full': Only fully deterministic implementations, error out on operations that only have non-deterministic\n        implementations.",
            "enum": [
              "no",
              "half",
              "full"
            ],
            "title": "Determinism",
            "type": "string"
          }
        },
        "title": "RunConfig",
        "type": "object"
      },
      "SFTArguments": {
        "additionalProperties": false,
        "properties": {
          "max_seq_length": {
            "default": 2048,
            "description": "Maximum length input sequence length. Longer sequences will be filtered out.",
            "title": "Max Seq Length",
            "type": "integer"
          },
          "save_name_if_new_basemodel": {
            "default": "checkpoint-new-basemodel",
            "description": "If a new basemodel is saved, it will be saved with this name",
            "title": "Save Name If New Basemodel",
            "type": "string"
          },
          "train_on_completions_only": {
            "default": false,
            "description": "Only comput loss on the assistant's turns.",
            "title": "Train On Completions Only",
            "type": "boolean"
          }
        },
        "title": "SFTArguments",
        "type": "object"
      },
      "SFTExperimentConfig": {
        "additionalProperties": false,
        "description": "A full SFT experiment's config\n\nSee the various sub-configs for their options.",
        "properties": {
          "method": {
            "const": "sft",
            "default": "sft",
            "title": "Method",
            "type": "string"
          },
          "data_conf": {
            "$ref": "#/$defs/ChatTrainValidConfig",
            "description": "The data input config"
          },
          "training_args": {
            "$ref": "#/$defs/SilogenTrainingArguments",
            "description": "Transformer TrainingArguments with some restrictions"
          },
          "overrides": {
            "$ref": "#/$defs/Overrides",
            "default": {
              "lr_multiplier": 1.0,
              "lr_batch_size_scaling": "none"
            },
            "description": "Override options to simplify the config interface"
          },
          "batchsize_conf": {
            "$ref": "#/$defs/BatchsizeConfig",
            "description": "Batch size configuration"
          },
          "peft_conf": {
            "anyOf": [
              {
                "$ref": "#/$defs/NoPeftConfig"
              },
              {
                "$ref": "#/$defs/PretrainedPeftConfig"
              },
              {
                "$ref": "#/$defs/GenericPeftConfig"
              }
            ],
            "description": "Adapter configuration",
            "title": "Peft Conf"
          },
          "run_conf": {
            "$ref": "#/$defs/RunConfig",
            "description": "Model related configuration"
          },
          "tracking": {
            "anyOf": [
              {
                "$ref": "#/$defs/FinetuningTrackingConfig"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "MLFlow tracking configuration"
          },
          "quant_conf": {
            "anyOf": [
              {
                "$ref": "#/$defs/NoQuantizationConfig"
              },
              {
                "$ref": "#/$defs/BnBQuantizationConfig"
              }
            ],
            "default": {
              "quantization_type": "no-quantization"
            },
            "description": "Quantization configuration",
            "title": "Quant Conf"
          },
          "sft_args": {
            "$ref": "#/$defs/SFTArguments",
            "description": "SFT specific arguments"
          }
        },
        "required": [
          "data_conf",
          "training_args",
          "batchsize_conf",
          "peft_conf",
          "run_conf",
          "sft_args"
        ],
        "title": "SFTExperimentConfig",
        "type": "object"
      },
      "SaveStrategy": {
        "enum": [
          "no",
          "steps",
          "epoch",
          "best"
        ],
        "title": "SaveStrategy",
        "type": "string"
      },
      "SchedulerType": {
        "description": "Scheduler names for the parameter `lr_scheduler_type` in [`TrainingArguments`].\nBy default, it uses \"linear\". Internally, this retrieves `get_linear_schedule_with_warmup` scheduler from [`Trainer`].\nScheduler types:\n   - \"linear\" = get_linear_schedule_with_warmup\n   - \"cosine\" = get_cosine_schedule_with_warmup\n   - \"cosine_with_restarts\" = get_cosine_with_hard_restarts_schedule_with_warmup\n   - \"polynomial\" = get_polynomial_decay_schedule_with_warmup\n   - \"constant\" =  get_constant_schedule\n   - \"constant_with_warmup\" = get_constant_schedule_with_warmup\n   - \"inverse_sqrt\" = get_inverse_sqrt_schedule\n   - \"reduce_lr_on_plateau\" = get_reduce_on_plateau_schedule\n   - \"cosine_with_min_lr\" = get_cosine_with_min_lr_schedule_with_warmup\n   - \"warmup_stable_decay\" = get_wsd_schedule",
        "enum": [
          "linear",
          "cosine",
          "cosine_with_restarts",
          "polynomial",
          "constant",
          "constant_with_warmup",
          "inverse_sqrt",
          "reduce_lr_on_plateau",
          "cosine_with_min_lr",
          "warmup_stable_decay"
        ],
        "title": "SchedulerType",
        "type": "string"
      },
      "SilogenDPOConfig": {
        "additionalProperties": false,
        "properties": {
          "output_dir": {
            "default": "checkpoints",
            "description": "The output directory where checkpoints will be written. Should be left as default, which is ./checkpoints",
            "title": "Output Dir",
            "type": "string"
          },
          "overwrite_output_dir": {
            "default": false,
            "title": "Overwrite Output Dir",
            "type": "boolean"
          },
          "do_train": {
            "default": false,
            "title": "Do Train",
            "type": "boolean"
          },
          "do_eval": {
            "default": false,
            "title": "Do Eval",
            "type": "boolean"
          },
          "do_predict": {
            "default": false,
            "title": "Do Predict",
            "type": "boolean"
          },
          "eval_strategy": {
            "anyOf": [
              {
                "$ref": "#/$defs/IntervalStrategy"
              },
              {
                "type": "string"
              }
            ],
            "default": "no",
            "title": "Eval Strategy"
          },
          "prediction_loss_only": {
            "default": false,
            "title": "Prediction Loss Only",
            "type": "boolean"
          },
          "per_device_train_batch_size": {
            "default": -1,
            "description": "Input is disallowed, this will computed from the batchsize config",
            "title": "Per Device Train Batch Size"
          },
          "per_device_eval_batch_size": {
            "default": -1,
            "description": "Input is disallowed, this will computed from the batchsize config",
            "title": "Per Device Eval Batch Size"
          },
          "per_gpu_train_batch_size": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Per Gpu Train Batch Size"
          },
          "per_gpu_eval_batch_size": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Per Gpu Eval Batch Size"
          },
          "gradient_accumulation_steps": {
            "default": -1,
            "description": "Input is disallowed, this will computed from the batchsize config",
            "title": "Gradient Accumulation Steps"
          },
          "eval_accumulation_steps": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Eval Accumulation Steps"
          },
          "eval_delay": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "default": 0,
            "title": "Eval Delay"
          },
          "torch_empty_cache_steps": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Torch Empty Cache Steps"
          },
          "learning_rate": {
            "default": 1e-06,
            "title": "Learning Rate",
            "type": "number"
          },
          "weight_decay": {
            "default": 0.0,
            "title": "Weight Decay",
            "type": "number"
          },
          "adam_beta1": {
            "default": 0.9,
            "title": "Adam Beta1",
            "type": "number"
          },
          "adam_beta2": {
            "default": 0.999,
            "title": "Adam Beta2",
            "type": "number"
          },
          "adam_epsilon": {
            "default": 1e-08,
            "title": "Adam Epsilon",
            "type": "number"
          },
          "max_grad_norm": {
            "default": 1.0,
            "title": "Max Grad Norm",
            "type": "number"
          },
          "num_train_epochs": {
            "default": 3.0,
            "title": "Num Train Epochs",
            "type": "number"
          },
          "max_steps": {
            "default": -1,
            "title": "Max Steps",
            "type": "integer"
          },
          "lr_scheduler_type": {
            "anyOf": [
              {
                "$ref": "#/$defs/SchedulerType"
              },
              {
                "type": "string"
              }
            ],
            "default": "linear",
            "title": "Lr Scheduler Type"
          },
          "lr_scheduler_kwargs": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lr Scheduler Kwargs"
          },
          "warmup_ratio": {
            "default": 0.0,
            "title": "Warmup Ratio",
            "type": "number"
          },
          "warmup_steps": {
            "default": 0,
            "title": "Warmup Steps",
            "type": "integer"
          },
          "log_level": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": "passive",
            "title": "Log Level"
          },
          "log_level_replica": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": "warning",
            "title": "Log Level Replica"
          },
          "log_on_each_node": {
            "default": true,
            "title": "Log On Each Node",
            "type": "boolean"
          },
          "logging_dir": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Logging Dir"
          },
          "logging_strategy": {
            "anyOf": [
              {
                "$ref": "#/$defs/IntervalStrategy"
              },
              {
                "type": "string"
              }
            ],
            "default": "steps",
            "title": "Logging Strategy"
          },
          "logging_first_step": {
            "default": false,
            "title": "Logging First Step",
            "type": "boolean"
          },
          "logging_steps": {
            "default": 500,
            "title": "Logging Steps",
            "type": "number"
          },
          "logging_nan_inf_filter": {
            "default": true,
            "title": "Logging Nan Inf Filter",
            "type": "boolean"
          },
          "save_strategy": {
            "anyOf": [
              {
                "$ref": "#/$defs/SaveStrategy"
              },
              {
                "type": "string"
              }
            ],
            "default": "steps",
            "title": "Save Strategy"
          },
          "save_steps": {
            "default": 500,
            "title": "Save Steps",
            "type": "number"
          },
          "save_total_limit": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Save Total Limit"
          },
          "save_safetensors": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "default": true,
            "title": "Save Safetensors"
          },
          "save_on_each_node": {
            "default": false,
            "title": "Save On Each Node",
            "type": "boolean"
          },
          "save_only_model": {
            "default": false,
            "title": "Save Only Model",
            "type": "boolean"
          },
          "restore_callback_states_from_checkpoint": {
            "default": false,
            "title": "Restore Callback States From Checkpoint",
            "type": "boolean"
          },
          "no_cuda": {
            "default": false,
            "title": "No Cuda",
            "type": "boolean"
          },
          "use_cpu": {
            "default": false,
            "title": "Use Cpu",
            "type": "boolean"
          },
          "use_mps_device": {
            "default": false,
            "title": "Use Mps Device",
            "type": "boolean"
          },
          "seed": {
            "default": 42,
            "title": "Seed",
            "type": "integer"
          },
          "data_seed": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Data Seed"
          },
          "jit_mode_eval": {
            "default": false,
            "title": "Jit Mode Eval",
            "type": "boolean"
          },
          "use_ipex": {
            "default": false,
            "title": "Use Ipex",
            "type": "boolean"
          },
          "bf16": {
            "default": false,
            "title": "Bf16",
            "type": "boolean"
          },
          "fp16": {
            "default": false,
            "title": "Fp16",
            "type": "boolean"
          },
          "fp16_opt_level": {
            "default": "O1",
            "title": "Fp16 Opt Level",
            "type": "string"
          },
          "half_precision_backend": {
            "default": "auto",
            "title": "Half Precision Backend",
            "type": "string"
          },
          "bf16_full_eval": {
            "default": false,
            "title": "Bf16 Full Eval",
            "type": "boolean"
          },
          "fp16_full_eval": {
            "default": false,
            "title": "Fp16 Full Eval",
            "type": "boolean"
          },
          "tf32": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Tf32"
          },
          "local_rank": {
            "default": -1,
            "title": "Local Rank",
            "type": "integer"
          },
          "ddp_backend": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Ddp Backend"
          },
          "tpu_num_cores": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Tpu Num Cores"
          },
          "tpu_metrics_debug": {
            "default": false,
            "title": "Tpu Metrics Debug",
            "type": "boolean"
          },
          "debug": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "items": {
                  "$ref": "#/$defs/DebugOption"
                },
                "type": "array"
              }
            ],
            "default": "",
            "title": "Debug"
          },
          "dataloader_drop_last": {
            "default": false,
            "title": "Dataloader Drop Last",
            "type": "boolean"
          },
          "eval_steps": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Eval Steps"
          },
          "dataloader_num_workers": {
            "default": 0,
            "title": "Dataloader Num Workers",
            "type": "integer"
          },
          "dataloader_prefetch_factor": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Dataloader Prefetch Factor"
          },
          "past_index": {
            "default": -1,
            "title": "Past Index",
            "type": "integer"
          },
          "run_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Run Name"
          },
          "disable_tqdm": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Disable Tqdm"
          },
          "remove_unused_columns": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "default": true,
            "title": "Remove Unused Columns"
          },
          "label_names": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Label Names"
          },
          "load_best_model_at_end": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "default": false,
            "title": "Load Best Model At End"
          },
          "metric_for_best_model": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Metric For Best Model"
          },
          "greater_is_better": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Greater Is Better"
          },
          "ignore_data_skip": {
            "default": false,
            "title": "Ignore Data Skip",
            "type": "boolean"
          },
          "fsdp": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/$defs/FSDPOption"
                },
                "type": "array"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": "",
            "title": "Fsdp"
          },
          "fsdp_min_num_params": {
            "default": 0,
            "title": "Fsdp Min Num Params",
            "type": "integer"
          },
          "fsdp_config": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Fsdp Config"
          },
          "fsdp_transformer_layer_cls_to_wrap": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Fsdp Transformer Layer Cls To Wrap"
          },
          "accelerator_config": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Accelerator Config"
          },
          "deepspeed": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Deepspeed"
          },
          "label_smoothing_factor": {
            "default": 0.0,
            "title": "Label Smoothing Factor",
            "type": "number"
          },
          "optim": {
            "anyOf": [
              {
                "$ref": "#/$defs/OptimizerNames"
              },
              {
                "type": "string"
              }
            ],
            "default": "adamw_torch",
            "title": "Optim"
          },
          "optim_args": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Optim Args"
          },
          "adafactor": {
            "default": false,
            "title": "Adafactor",
            "type": "boolean"
          },
          "group_by_length": {
            "default": false,
            "title": "Group By Length",
            "type": "boolean"
          },
          "length_column_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": "length",
            "title": "Length Column Name"
          },
          "report_to": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Report To"
          },
          "ddp_find_unused_parameters": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Ddp Find Unused Parameters"
          },
          "ddp_bucket_cap_mb": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Ddp Bucket Cap Mb"
          },
          "ddp_broadcast_buffers": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Ddp Broadcast Buffers"
          },
          "dataloader_pin_memory": {
            "default": true,
            "title": "Dataloader Pin Memory",
            "type": "boolean"
          },
          "dataloader_persistent_workers": {
            "default": false,
            "title": "Dataloader Persistent Workers",
            "type": "boolean"
          },
          "skip_memory_metrics": {
            "default": true,
            "title": "Skip Memory Metrics",
            "type": "boolean"
          },
          "use_legacy_prediction_loop": {
            "default": false,
            "title": "Use Legacy Prediction Loop",
            "type": "boolean"
          },
          "push_to_hub": {
            "default": false,
            "title": "Push To Hub",
            "type": "boolean"
          },
          "resume_from_checkpoint": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Resume From Checkpoint"
          },
          "hub_model_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Hub Model Id"
          },
          "hub_strategy": {
            "anyOf": [
              {
                "$ref": "#/$defs/HubStrategy"
              },
              {
                "type": "string"
              }
            ],
            "default": "every_save",
            "title": "Hub Strategy"
          },
          "hub_token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Hub Token"
          },
          "hub_private_repo": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Hub Private Repo"
          },
          "hub_always_push": {
            "default": false,
            "title": "Hub Always Push",
            "type": "boolean"
          },
          "gradient_checkpointing": {
            "default": false,
            "title": "Gradient Checkpointing",
            "type": "boolean"
          },
          "gradient_checkpointing_kwargs": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Gradient Checkpointing Kwargs"
          },
          "include_inputs_for_metrics": {
            "default": false,
            "title": "Include Inputs For Metrics",
            "type": "boolean"
          },
          "include_for_metrics": {
            "items": {
              "type": "string"
            },
            "title": "Include For Metrics",
            "type": "array"
          },
          "eval_do_concat_batches": {
            "default": true,
            "title": "Eval Do Concat Batches",
            "type": "boolean"
          },
          "fp16_backend": {
            "default": "auto",
            "title": "Fp16 Backend",
            "type": "string"
          },
          "evaluation_strategy": {
            "anyOf": [
              {
                "$ref": "#/$defs/IntervalStrategy"
              },
              {
                "type": "string"
              }
            ],
            "default": null,
            "title": "Evaluation Strategy"
          },
          "push_to_hub_model_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Push To Hub Model Id"
          },
          "push_to_hub_organization": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Push To Hub Organization"
          },
          "push_to_hub_token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Push To Hub Token"
          },
          "mp_parameters": {
            "default": "",
            "title": "Mp Parameters",
            "type": "string"
          },
          "auto_find_batch_size": {
            "default": false,
            "title": "Auto Find Batch Size",
            "type": "boolean"
          },
          "full_determinism": {
            "default": false,
            "title": "Full Determinism",
            "type": "boolean"
          },
          "torchdynamo": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Torchdynamo"
          },
          "ray_scope": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": "last",
            "title": "Ray Scope"
          },
          "ddp_timeout": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": 1800,
            "title": "Ddp Timeout"
          },
          "torch_compile": {
            "default": false,
            "title": "Torch Compile",
            "type": "boolean"
          },
          "torch_compile_backend": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Torch Compile Backend"
          },
          "torch_compile_mode": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Torch Compile Mode"
          },
          "dispatch_batches": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Dispatch Batches"
          },
          "split_batches": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Split Batches"
          },
          "include_tokens_per_second": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "default": false,
            "title": "Include Tokens Per Second"
          },
          "include_num_input_tokens_seen": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "default": false,
            "title": "Include Num Input Tokens Seen"
          },
          "neftune_noise_alpha": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Neftune Noise Alpha"
          },
          "optim_target_modules": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Optim Target Modules"
          },
          "batch_eval_metrics": {
            "default": false,
            "title": "Batch Eval Metrics",
            "type": "boolean"
          },
          "eval_on_start": {
            "default": false,
            "title": "Eval On Start",
            "type": "boolean"
          },
          "use_liger_kernel": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "default": false,
            "title": "Use Liger Kernel"
          },
          "eval_use_gather_object": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "default": false,
            "title": "Eval Use Gather Object"
          },
          "average_tokens_across_devices": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "default": false,
            "title": "Average Tokens Across Devices"
          },
          "beta": {
            "default": 0.1,
            "title": "Beta",
            "type": "number"
          },
          "label_smoothing": {
            "default": 0.0,
            "title": "Label Smoothing",
            "type": "number"
          },
          "loss_type": {
            "default": "sigmoid",
            "enum": [
              "sigmoid",
              "hinge",
              "ipo",
              "exo_pair",
              "nca_pair",
              "robust",
              "bco_pair",
              "sppo_hard",
              "aot",
              "aot_pair",
              "discopop",
              "apo_zero",
              "apo_down"
            ],
            "title": "Loss Type",
            "type": "string"
          },
          "use_weighting": {
            "default": false,
            "title": "Use Weighting",
            "type": "boolean"
          },
          "label_pad_token_id": {
            "default": -100,
            "title": "Label Pad Token Id",
            "type": "integer"
          },
          "padding_value": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Padding Value"
          },
          "truncation_mode": {
            "default": "keep_end",
            "title": "Truncation Mode",
            "type": "string"
          },
          "max_length": {
            "default": 2048,
            "description": "Maximum total length of inputs",
            "title": "Max Length",
            "type": "integer"
          },
          "max_prompt_length": {
            "default": 1536,
            "description": "Maximum prompt length",
            "title": "Max Prompt Length",
            "type": "integer"
          },
          "max_target_length": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Max Target Length"
          },
          "max_completion_length": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Max Completion Length"
          },
          "is_encoder_decoder": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Is Encoder Decoder"
          },
          "disable_dropout": {
            "default": true,
            "title": "Disable Dropout",
            "type": "boolean"
          },
          "generate_during_eval": {
            "default": false,
            "title": "Generate During Eval",
            "type": "boolean"
          },
          "precompute_ref_log_probs": {
            "default": false,
            "title": "Precompute Ref Log Probs",
            "type": "boolean"
          },
          "precompute_ref_batch_size": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Precompute Ref Batch Size"
          },
          "dataset_num_proc": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Dataset Num Proc"
          },
          "model_init_kwargs": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Model Init Kwargs"
          },
          "ref_model_init_kwargs": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Ref Model Init Kwargs"
          },
          "model_adapter_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Model Adapter Name"
          },
          "ref_adapter_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Ref Adapter Name"
          },
          "reference_free": {
            "default": false,
            "title": "Reference Free",
            "type": "boolean"
          },
          "force_use_ref_model": {
            "default": false,
            "title": "Force Use Ref Model",
            "type": "boolean"
          },
          "f_divergence_type": {
            "$ref": "#/$defs/FDivergenceType",
            "default": "reverse_kl"
          },
          "f_alpha_divergence_coef": {
            "default": 1.0,
            "title": "F Alpha Divergence Coef",
            "type": "number"
          },
          "sync_ref_model": {
            "default": false,
            "title": "Sync Ref Model",
            "type": "boolean"
          },
          "ref_model_mixup_alpha": {
            "default": 0.9,
            "title": "Ref Model Mixup Alpha",
            "type": "number"
          },
          "ref_model_sync_steps": {
            "default": 64,
            "title": "Ref Model Sync Steps",
            "type": "integer"
          },
          "rpo_alpha": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Rpo Alpha"
          },
          "discopop_tau": {
            "default": 0.05,
            "title": "Discopop Tau",
            "type": "number"
          },
          "use_num_logits_to_keep": {
            "default": false,
            "title": "Use Num Logits To Keep",
            "type": "boolean"
          },
          "distributed_state": {
            "default": null,
            "title": "Distributed State"
          },
          "deepspeed_plugin": {
            "default": null,
            "title": "Deepspeed Plugin"
          }
        },
        "title": "SilogenDPOConfig",
        "type": "object"
      },
      "SilogenTrainingArguments": {
        "additionalProperties": true,
        "properties": {
          "output_dir": {
            "default": "checkpoints",
            "description": "The output directory where checkpoints will be written. Should be left as default, which is ./checkpoints",
            "title": "Output Dir",
            "type": "string"
          },
          "overwrite_output_dir": {
            "default": false,
            "title": "Overwrite Output Dir",
            "type": "boolean"
          },
          "do_train": {
            "default": false,
            "title": "Do Train",
            "type": "boolean"
          },
          "do_eval": {
            "default": false,
            "title": "Do Eval",
            "type": "boolean"
          },
          "do_predict": {
            "default": false,
            "title": "Do Predict",
            "type": "boolean"
          },
          "eval_strategy": {
            "anyOf": [
              {
                "$ref": "#/$defs/IntervalStrategy"
              },
              {
                "type": "string"
              }
            ],
            "default": "no",
            "title": "Eval Strategy"
          },
          "prediction_loss_only": {
            "default": false,
            "title": "Prediction Loss Only",
            "type": "boolean"
          },
          "per_device_train_batch_size": {
            "default": -1,
            "description": "Input is disallowed, this will computed from the batchsize config",
            "title": "Per Device Train Batch Size"
          },
          "per_device_eval_batch_size": {
            "default": -1,
            "description": "Input is disallowed, this will computed from the batchsize config",
            "title": "Per Device Eval Batch Size"
          },
          "per_gpu_train_batch_size": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Per Gpu Train Batch Size"
          },
          "per_gpu_eval_batch_size": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Per Gpu Eval Batch Size"
          },
          "gradient_accumulation_steps": {
            "default": -1,
            "description": "Input is disallowed, this will computed from the batchsize config",
            "title": "Gradient Accumulation Steps"
          },
          "eval_accumulation_steps": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Eval Accumulation Steps"
          },
          "eval_delay": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "default": 0,
            "title": "Eval Delay"
          },
          "torch_empty_cache_steps": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Torch Empty Cache Steps"
          },
          "learning_rate": {
            "default": 5e-05,
            "title": "Learning Rate",
            "type": "number"
          },
          "weight_decay": {
            "default": 0.0,
            "title": "Weight Decay",
            "type": "number"
          },
          "adam_beta1": {
            "default": 0.9,
            "title": "Adam Beta1",
            "type": "number"
          },
          "adam_beta2": {
            "default": 0.999,
            "title": "Adam Beta2",
            "type": "number"
          },
          "adam_epsilon": {
            "default": 1e-08,
            "title": "Adam Epsilon",
            "type": "number"
          },
          "max_grad_norm": {
            "default": 1.0,
            "title": "Max Grad Norm",
            "type": "number"
          },
          "num_train_epochs": {
            "default": 3.0,
            "title": "Num Train Epochs",
            "type": "number"
          },
          "max_steps": {
            "default": -1,
            "title": "Max Steps",
            "type": "integer"
          },
          "lr_scheduler_type": {
            "anyOf": [
              {
                "$ref": "#/$defs/SchedulerType"
              },
              {
                "type": "string"
              }
            ],
            "default": "linear",
            "title": "Lr Scheduler Type"
          },
          "lr_scheduler_kwargs": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lr Scheduler Kwargs"
          },
          "warmup_ratio": {
            "default": 0.0,
            "title": "Warmup Ratio",
            "type": "number"
          },
          "warmup_steps": {
            "default": 0,
            "title": "Warmup Steps",
            "type": "integer"
          },
          "log_level": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": "passive",
            "title": "Log Level"
          },
          "log_level_replica": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": "warning",
            "title": "Log Level Replica"
          },
          "log_on_each_node": {
            "default": true,
            "title": "Log On Each Node",
            "type": "boolean"
          },
          "logging_dir": {
            "default": "logs",
            "description": "The output directory where logs (like tensorboard outputs) will be written. Should be left as default, which is ./logs",
            "title": "Logging Dir",
            "type": "string"
          },
          "logging_strategy": {
            "anyOf": [
              {
                "$ref": "#/$defs/IntervalStrategy"
              },
              {
                "type": "string"
              }
            ],
            "default": "steps",
            "title": "Logging Strategy"
          },
          "logging_first_step": {
            "default": false,
            "title": "Logging First Step",
            "type": "boolean"
          },
          "logging_steps": {
            "default": 500,
            "title": "Logging Steps",
            "type": "number"
          },
          "logging_nan_inf_filter": {
            "default": true,
            "title": "Logging Nan Inf Filter",
            "type": "boolean"
          },
          "save_strategy": {
            "anyOf": [
              {
                "$ref": "#/$defs/SaveStrategy"
              },
              {
                "type": "string"
              }
            ],
            "default": "steps",
            "title": "Save Strategy"
          },
          "save_steps": {
            "default": 500,
            "title": "Save Steps",
            "type": "number"
          },
          "save_total_limit": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Save Total Limit"
          },
          "save_safetensors": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "default": true,
            "title": "Save Safetensors"
          },
          "save_on_each_node": {
            "default": false,
            "title": "Save On Each Node",
            "type": "boolean"
          },
          "save_only_model": {
            "default": false,
            "title": "Save Only Model",
            "type": "boolean"
          },
          "restore_callback_states_from_checkpoint": {
            "default": false,
            "title": "Restore Callback States From Checkpoint",
            "type": "boolean"
          },
          "no_cuda": {
            "default": false,
            "title": "No Cuda",
            "type": "boolean"
          },
          "use_cpu": {
            "default": false,
            "title": "Use Cpu",
            "type": "boolean"
          },
          "use_mps_device": {
            "default": false,
            "title": "Use Mps Device",
            "type": "boolean"
          },
          "seed": {
            "default": 42,
            "title": "Seed",
            "type": "integer"
          },
          "data_seed": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Data Seed"
          },
          "jit_mode_eval": {
            "default": false,
            "title": "Jit Mode Eval",
            "type": "boolean"
          },
          "use_ipex": {
            "default": false,
            "title": "Use Ipex",
            "type": "boolean"
          },
          "bf16": {
            "default": false,
            "title": "Bf16",
            "type": "boolean"
          },
          "fp16": {
            "default": false,
            "title": "Fp16",
            "type": "boolean"
          },
          "fp16_opt_level": {
            "default": "O1",
            "title": "Fp16 Opt Level",
            "type": "string"
          },
          "half_precision_backend": {
            "default": "auto",
            "title": "Half Precision Backend",
            "type": "string"
          },
          "bf16_full_eval": {
            "default": false,
            "title": "Bf16 Full Eval",
            "type": "boolean"
          },
          "fp16_full_eval": {
            "default": false,
            "title": "Fp16 Full Eval",
            "type": "boolean"
          },
          "tf32": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Tf32"
          },
          "local_rank": {
            "default": -1,
            "title": "Local Rank",
            "type": "integer"
          },
          "ddp_backend": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Ddp Backend"
          },
          "tpu_num_cores": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Tpu Num Cores"
          },
          "tpu_metrics_debug": {
            "default": false,
            "title": "Tpu Metrics Debug",
            "type": "boolean"
          },
          "debug": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "items": {
                  "$ref": "#/$defs/DebugOption"
                },
                "type": "array"
              }
            ],
            "default": "",
            "title": "Debug"
          },
          "dataloader_drop_last": {
            "default": false,
            "title": "Dataloader Drop Last",
            "type": "boolean"
          },
          "eval_steps": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Eval Steps"
          },
          "dataloader_num_workers": {
            "default": 0,
            "title": "Dataloader Num Workers",
            "type": "integer"
          },
          "dataloader_prefetch_factor": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Dataloader Prefetch Factor"
          },
          "past_index": {
            "default": -1,
            "title": "Past Index",
            "type": "integer"
          },
          "run_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Run Name"
          },
          "disable_tqdm": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Disable Tqdm"
          },
          "remove_unused_columns": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "default": true,
            "title": "Remove Unused Columns"
          },
          "label_names": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Label Names"
          },
          "load_best_model_at_end": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "default": false,
            "title": "Load Best Model At End"
          },
          "metric_for_best_model": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Metric For Best Model"
          },
          "greater_is_better": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Greater Is Better"
          },
          "ignore_data_skip": {
            "default": false,
            "title": "Ignore Data Skip",
            "type": "boolean"
          },
          "fsdp": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/$defs/FSDPOption"
                },
                "type": "array"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": "",
            "title": "Fsdp"
          },
          "fsdp_min_num_params": {
            "default": 0,
            "title": "Fsdp Min Num Params",
            "type": "integer"
          },
          "fsdp_config": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Fsdp Config"
          },
          "fsdp_transformer_layer_cls_to_wrap": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Fsdp Transformer Layer Cls To Wrap"
          },
          "accelerator_config": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Accelerator Config"
          },
          "deepspeed": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Deepspeed"
          },
          "label_smoothing_factor": {
            "default": 0.0,
            "title": "Label Smoothing Factor",
            "type": "number"
          },
          "optim": {
            "anyOf": [
              {
                "$ref": "#/$defs/OptimizerNames"
              },
              {
                "type": "string"
              }
            ],
            "default": "adamw_torch",
            "title": "Optim"
          },
          "optim_args": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Optim Args"
          },
          "adafactor": {
            "default": false,
            "title": "Adafactor",
            "type": "boolean"
          },
          "group_by_length": {
            "default": false,
            "title": "Group By Length",
            "type": "boolean"
          },
          "length_column_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": "length",
            "title": "Length Column Name"
          },
          "report_to": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Report To"
          },
          "ddp_find_unused_parameters": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Ddp Find Unused Parameters"
          },
          "ddp_bucket_cap_mb": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Ddp Bucket Cap Mb"
          },
          "ddp_broadcast_buffers": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Ddp Broadcast Buffers"
          },
          "dataloader_pin_memory": {
            "default": true,
            "title": "Dataloader Pin Memory",
            "type": "boolean"
          },
          "dataloader_persistent_workers": {
            "default": false,
            "title": "Dataloader Persistent Workers",
            "type": "boolean"
          },
          "skip_memory_metrics": {
            "default": true,
            "title": "Skip Memory Metrics",
            "type": "boolean"
          },
          "use_legacy_prediction_loop": {
            "default": false,
            "title": "Use Legacy Prediction Loop",
            "type": "boolean"
          },
          "push_to_hub": {
            "default": false,
            "title": "Push To Hub",
            "type": "boolean"
          },
          "resume_from_checkpoint": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Resume From Checkpoint"
          },
          "hub_model_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Hub Model Id"
          },
          "hub_strategy": {
            "anyOf": [
              {
                "$ref": "#/$defs/HubStrategy"
              },
              {
                "type": "string"
              }
            ],
            "default": "every_save",
            "title": "Hub Strategy"
          },
          "hub_token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Hub Token"
          },
          "hub_private_repo": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Hub Private Repo"
          },
          "hub_always_push": {
            "default": false,
            "title": "Hub Always Push",
            "type": "boolean"
          },
          "gradient_checkpointing": {
            "default": false,
            "title": "Gradient Checkpointing",
            "type": "boolean"
          },
          "gradient_checkpointing_kwargs": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Gradient Checkpointing Kwargs"
          },
          "include_inputs_for_metrics": {
            "default": false,
            "title": "Include Inputs For Metrics",
            "type": "boolean"
          },
          "include_for_metrics": {
            "items": {
              "type": "string"
            },
            "title": "Include For Metrics",
            "type": "array"
          },
          "eval_do_concat_batches": {
            "default": true,
            "title": "Eval Do Concat Batches",
            "type": "boolean"
          },
          "fp16_backend": {
            "default": "auto",
            "title": "Fp16 Backend",
            "type": "string"
          },
          "evaluation_strategy": {
            "anyOf": [
              {
                "$ref": "#/$defs/IntervalStrategy"
              },
              {
                "type": "string"
              }
            ],
            "default": null,
            "title": "Evaluation Strategy"
          },
          "push_to_hub_model_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Push To Hub Model Id"
          },
          "push_to_hub_organization": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Push To Hub Organization"
          },
          "push_to_hub_token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Push To Hub Token"
          },
          "mp_parameters": {
            "default": "",
            "title": "Mp Parameters",
            "type": "string"
          },
          "auto_find_batch_size": {
            "default": false,
            "title": "Auto Find Batch Size",
            "type": "boolean"
          },
          "full_determinism": {
            "default": false,
            "title": "Full Determinism",
            "type": "boolean"
          },
          "torchdynamo": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Torchdynamo"
          },
          "ray_scope": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": "last",
            "title": "Ray Scope"
          },
          "ddp_timeout": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": 1800,
            "title": "Ddp Timeout"
          },
          "torch_compile": {
            "default": false,
            "title": "Torch Compile",
            "type": "boolean"
          },
          "torch_compile_backend": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Torch Compile Backend"
          },
          "torch_compile_mode": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Torch Compile Mode"
          },
          "dispatch_batches": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Dispatch Batches"
          },
          "split_batches": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Split Batches"
          },
          "include_tokens_per_second": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "default": false,
            "title": "Include Tokens Per Second"
          },
          "include_num_input_tokens_seen": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "default": false,
            "title": "Include Num Input Tokens Seen"
          },
          "neftune_noise_alpha": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Neftune Noise Alpha"
          },
          "optim_target_modules": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Optim Target Modules"
          },
          "batch_eval_metrics": {
            "default": false,
            "title": "Batch Eval Metrics",
            "type": "boolean"
          },
          "eval_on_start": {
            "default": false,
            "title": "Eval On Start",
            "type": "boolean"
          },
          "use_liger_kernel": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "default": false,
            "title": "Use Liger Kernel"
          },
          "eval_use_gather_object": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "default": false,
            "title": "Eval Use Gather Object"
          },
          "average_tokens_across_devices": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "default": false,
            "title": "Average Tokens Across Devices"
          }
        },
        "title": "SilogenTrainingArguments",
        "type": "object"
      },
      "TaskType": {
        "description": "Enum class for the different types of tasks supported by PEFT.\n\nOverview of the supported task types:\n- SEQ_CLS: Text classification.\n- SEQ_2_SEQ_LM: Sequence-to-sequence language modeling.\n- CAUSAL_LM: Causal language modeling.\n- TOKEN_CLS: Token classification.\n- QUESTION_ANS: Question answering.\n- FEATURE_EXTRACTION: Feature extraction. Provides the hidden states which can be used as embeddings or features\n  for downstream tasks.",
        "enum": [
          "SEQ_CLS",
          "SEQ_2_SEQ_LM",
          "CAUSAL_LM",
          "TOKEN_CLS",
          "QUESTION_ANS",
          "FEATURE_EXTRACTION"
        ],
        "title": "TaskType",
        "type": "string"
      },
      "WeightedDatasetDefinition": {
        "additionalProperties": false,
        "description": "Define a dataset, with a weight for sampling",
        "properties": {
          "path": {
            "description": "Local path to a JSONL file in the finetuning data format",
            "title": "Path",
            "type": "string"
          },
          "sampling_weight": {
            "default": 1.0,
            "title": "Sampling Weight",
            "type": "number"
          }
        },
        "required": [
          "path"
        ],
        "title": "WeightedDatasetDefinition",
        "type": "object"
      },
      "WeightedMixDataInput": {
        "additionalProperties": false,
        "description": "A list of datasets where each is sampled by a certain weight\n\nThese datasets are interleaved based on the sampling weights. The resulting dataset is fully precomputed, upto\nthe point where every single sample in every dataset gets picked. This means that with small sampling weights,\nit can take a lot of draws to see every sample from a dataset and so the resulting dataset can be very large.\n\nThe datasets themselves need to be in the finetuning supported JSONL formats.\nFor SFT this means lines:\n{\"messages\": {\"content\": \"string\", \"role\": \"string\"}}\nFor DPO this means lines of:\n{\"prompt_messages\": {\"content\": \"string\", \"role\": \"string\"}, \"chosen_messages\": {\"content\": \"string\", \"role\": \"string\"}, \"rejected_messages\": {\"content\": \"string\", \"role\": \"string\"}}",
        "properties": {
          "type": {
            "const": "PRECOMPUTE_WEIGHTED_MIX",
            "title": "Type",
            "type": "string"
          },
          "data_type": {
            "default": "ChatConversation",
            "title": "Data Type",
            "type": "string"
          },
          "datasets": {
            "items": {
              "$ref": "#/$defs/WeightedDatasetDefinition"
            },
            "minItems": 1,
            "title": "Datasets",
            "type": "array"
          },
          "seed": {
            "default": 19851243,
            "description": "Seed for the random number generator for interleaving draws",
            "title": "Seed",
            "type": "integer"
          }
        },
        "required": [
          "type",
          "datasets"
        ],
        "title": "WeightedMixDataInput",
        "type": "object"
      }
    }
}
